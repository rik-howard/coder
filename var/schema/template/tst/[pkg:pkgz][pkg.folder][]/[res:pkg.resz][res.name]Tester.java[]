
# xemplate
.                             |
.                             | package [pkg.name];
.                             |
.                             | import testing.Factory;
.                             | import testing.Tester;
.[ipr:res.iprz]               | import [ipr.ipe];
.[]                           |
.                             | public class [res.name]Tester
.                             | extends Tester
.                             | {
.                             |
.                             |   public static void main (String @0 args)
.                             |   {
.[fld:res.fldz]               |     test[fld.posh] ();
.[]                           |     testHashCode ();
.                             |     testEquals ();
.                             |     testToString ();
.                             |     try {testClone ();}
.                             |     catch (CloneNotSupportedException e) {e.printStackTrace ();}
.                             |     burp ();
.                             |   }
.                             |
.[fld:res.fldz]               |   public static final void test[fld.posh] ()
.                             |   {
.                             |     [fld.dec] expected = Factory.[fld.eg] ();
.                             |     [res.name] [res.humble] = new [res.name] ();
.                             |     [res.humble].set[fld.posh] (expected);
.                             |     [fld.dec] actual = [res.humble].[fld.name] ();
.                             |     assert expected.equals (actual): "[res.name]Tester.test[fld.posh] (): not " + expected + " is " + actual;
.                             |     burp ();
.                             |   }
.                             |
.[]                           |   public static final void testHashCode ()
.                             |   {
.                             |     Integer hashCode = new [res.name] ().hashCode ();
.                             |     assert hashCode != null: "hashCode is null";
.                             |     assert hashCode instanceof Integer: "not hashCode instanceof Integer";
.                             |     burp ();
.                             |   }
.                             |
.                             |   public static final void testEquals ()
.                             |   {
.                             |     assert ! new [res.name] ().equals (null): "[res.name]Tester.testEquals (): " + new [res.name] () + " is " + null;
.                             |     burp ();
.                             |   }
.                             |
.                             |   public static final void testToString ()
.                             |   {
.                             |     String string = new [res.name] ().toString ();
.                             |     assert string.startsWith ("<"): "[res.name]Tester.testToString (): not " + string + " startsWith <";
.                             |     assert string.endsWith (">"): "[res.name]Tester.testToString (): not " + string + " endsWith >";
.                             |     burp ();
.                             |   }
.                             |
.                             |   public static final void testClone ()
.                             |   throws CloneNotSupportedException
.                             |   {
.                             |     [res.name] [res.humble] = new [res.name] ();
.                             |     Object clone = [res.humble].clone ();
.                             |     assert [res.humble] != clone: "[res.name]Tester.testClone (): " + [res.humble] + " == " + clone;
.                             |     assert [res.humble].equals (clone): "[res.name]Tester.testClone (): not " + [res.humble] + " is " + clone;
.                             |     burp ();
.                             |   }
.                             |
.                             | }
.                             |
